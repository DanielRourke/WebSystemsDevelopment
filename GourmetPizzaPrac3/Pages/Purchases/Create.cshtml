@page
@model GourmetPizzaPrac3.Pages.Purchases.CreateModel

@{
    ViewData["Title"] = "Create";
    Layout = "~/Pages/Shared/_Layout.cshtml";
}

<h1>Create</h1>

<h4>Purchase</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="PurchaseViewModel.PizzaID" class="control-label"></label>
                <select asp-for="PurchaseViewModel.PizzaID" class="form-control" asp-items="ViewBag.PizzaID"></select>
            </div>
            <div class="form-group">
                <label asp-for="PurchaseViewModel.PizzaCount" class="control-label"></label>
                <input asp-for="PurchaseViewModel.PizzaCount" class="form-control" />
                <span asp-validation-for="PurchaseViewModel.PizzaCount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@if (ViewData["SuccessDB"] != null)
{
    <hr />
    <h5>
        @if ((string)ViewData["SuccessDB"] == "success")
        {
        <span>
                Thanks, you have succesfully purchased
        </span>         
        }
        else
        {
        <span>
                Sorry, you failed to purchase
        </span>
        }
        <strong>@Html.DisplayFor(model => model.PurchaseViewModel.PizzaCount)</strong>
        <strong>@Html.DisplayFor(model => model.PurchaseViewModel.Name) </strong>
        for a total of 
        <strong>@Html.DisplayFor(model => model.PurchaseViewModel.TotalPrice) </strong>
    </h5>
}

<div>
    <a asp-page="Index">Back to List</a>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
